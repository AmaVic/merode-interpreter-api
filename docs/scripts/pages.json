[{"name":"Boolean","description":"be.vamaralds.merode.model.Attribute.Type.Boolean","location":"merode/be.vamaralds.merode.model/-attribute/-type/-boolean/index.html","searchKeys":["Boolean","Boolean","be.vamaralds.merode.model.Attribute.Type.Boolean"]},{"name":"Double","description":"be.vamaralds.merode.model.Attribute.Type.Double","location":"merode/be.vamaralds.merode.model/-attribute/-type/-double/index.html","searchKeys":["Double","Double","be.vamaralds.merode.model.Attribute.Type.Double"]},{"name":"Float","description":"be.vamaralds.merode.model.Attribute.Type.Float","location":"merode/be.vamaralds.merode.model/-attribute/-type/-float/index.html","searchKeys":["Float","Float","be.vamaralds.merode.model.Attribute.Type.Float"]},{"name":"Int","description":"be.vamaralds.merode.model.Attribute.Type.Int","location":"merode/be.vamaralds.merode.model/-attribute/-type/-int/index.html","searchKeys":["Int","Int","be.vamaralds.merode.model.Attribute.Type.Int"]},{"name":"String","description":"be.vamaralds.merode.model.Attribute.Type.String","location":"merode/be.vamaralds.merode.model/-attribute/-type/-string/index.html","searchKeys":["String","String","be.vamaralds.merode.model.Attribute.Type.String"]},{"name":"abstract suspend fun addNew(obj: BusinessObject): Either<StoreError, BusinessObject>","description":"be.vamaralds.merode.store.BusinessObjectStore.addNew","location":"merode/be.vamaralds.merode.store/-business-object-store/add-new.html","searchKeys":["addNew","abstract suspend fun addNew(obj: BusinessObject): Either<StoreError, BusinessObject>","be.vamaralds.merode.store.BusinessObjectStore.addNew"]},{"name":"abstract suspend fun append(event: Event): Either<StoreError, Event>","description":"be.vamaralds.merode.store.EventStore.append","location":"merode/be.vamaralds.merode.store/-event-store/append.html","searchKeys":["append","abstract suspend fun append(event: Event): Either<StoreError, Event>","be.vamaralds.merode.store.EventStore.append"]},{"name":"abstract suspend fun delete(id: Long): Either<StoreError, BusinessObject>","description":"be.vamaralds.merode.store.BusinessObjectStore.delete","location":"merode/be.vamaralds.merode.store/-business-object-store/delete.html","searchKeys":["delete","abstract suspend fun delete(id: Long): Either<StoreError, BusinessObject>","be.vamaralds.merode.store.BusinessObjectStore.delete"]},{"name":"abstract suspend fun exists(id: Long): Either<StoreError, Boolean>","description":"be.vamaralds.merode.store.BusinessObjectStore.exists","location":"merode/be.vamaralds.merode.store/-business-object-store/exists.html","searchKeys":["exists","abstract suspend fun exists(id: Long): Either<StoreError, Boolean>","be.vamaralds.merode.store.BusinessObjectStore.exists"]},{"name":"abstract suspend fun exists(id: Long): Either<StoreError, Boolean>","description":"be.vamaralds.merode.store.EventStore.exists","location":"merode/be.vamaralds.merode.store/-event-store/exists.html","searchKeys":["exists","abstract suspend fun exists(id: Long): Either<StoreError, Boolean>","be.vamaralds.merode.store.EventStore.exists"]},{"name":"abstract suspend fun get(id: Long): Either<StoreError, BusinessObject>","description":"be.vamaralds.merode.store.BusinessObjectStore.get","location":"merode/be.vamaralds.merode.store/-business-object-store/get.html","searchKeys":["get","abstract suspend fun get(id: Long): Either<StoreError, BusinessObject>","be.vamaralds.merode.store.BusinessObjectStore.get"]},{"name":"abstract suspend fun get(id: Long): Either<StoreError, Event>","description":"be.vamaralds.merode.store.EventStore.get","location":"merode/be.vamaralds.merode.store/-event-store/get.html","searchKeys":["get","abstract suspend fun get(id: Long): Either<StoreError, Event>","be.vamaralds.merode.store.EventStore.get"]},{"name":"abstract suspend fun getAll(): Either<StoreError, List<BusinessObject>>","description":"be.vamaralds.merode.store.BusinessObjectStore.getAll","location":"merode/be.vamaralds.merode.store/-business-object-store/get-all.html","searchKeys":["getAll","abstract suspend fun getAll(): Either<StoreError, List<BusinessObject>>","be.vamaralds.merode.store.BusinessObjectStore.getAll"]},{"name":"abstract suspend fun getAll(): Either<StoreError, List<Event>>","description":"be.vamaralds.merode.store.EventStore.getAll","location":"merode/be.vamaralds.merode.store/-event-store/get-all.html","searchKeys":["getAll","abstract suspend fun getAll(): Either<StoreError, List<Event>>","be.vamaralds.merode.store.EventStore.getAll"]},{"name":"abstract suspend fun getEventsForBusinessObject(id: Long): Either<StoreError, List<Event>>","description":"be.vamaralds.merode.store.EventStore.getEventsForBusinessObject","location":"merode/be.vamaralds.merode.store/-event-store/get-events-for-business-object.html","searchKeys":["getEventsForBusinessObject","abstract suspend fun getEventsForBusinessObject(id: Long): Either<StoreError, List<Event>>","be.vamaralds.merode.store.EventStore.getEventsForBusinessObject"]},{"name":"abstract suspend fun size(): Either<StoreError, Long>","description":"be.vamaralds.merode.store.BusinessObjectStore.size","location":"merode/be.vamaralds.merode.store/-business-object-store/size.html","searchKeys":["size","abstract suspend fun size(): Either<StoreError, Long>","be.vamaralds.merode.store.BusinessObjectStore.size"]},{"name":"abstract suspend fun size(): Either<StoreError, Long>","description":"be.vamaralds.merode.store.EventStore.size","location":"merode/be.vamaralds.merode.store/-event-store/size.html","searchKeys":["size","abstract suspend fun size(): Either<StoreError, Long>","be.vamaralds.merode.store.EventStore.size"]},{"name":"abstract suspend fun update(obj: BusinessObject): Either<StoreError, BusinessObject>","description":"be.vamaralds.merode.store.BusinessObjectStore.update","location":"merode/be.vamaralds.merode.store/-business-object-store/update.html","searchKeys":["update","abstract suspend fun update(obj: BusinessObject): Either<StoreError, BusinessObject>","be.vamaralds.merode.store.BusinessObjectStore.update"]},{"name":"abstract val value: Any?","description":"be.vamaralds.merode.instance.AttributeValue.value","location":"merode/be.vamaralds.merode.instance/-attribute-value/value.html","searchKeys":["value","abstract val value: Any?","be.vamaralds.merode.instance.AttributeValue.value"]},{"name":"class AttributeNotFoundError(attributeName: String, businessObjectTypeName: String) : ModelError","description":"be.vamaralds.merode.model.AttributeNotFoundError","location":"merode/be.vamaralds.merode.model/-attribute-not-found-error/index.html","searchKeys":["AttributeNotFoundError","class AttributeNotFoundError(attributeName: String, businessObjectTypeName: String) : ModelError","be.vamaralds.merode.model.AttributeNotFoundError"]},{"name":"class EventHandlingError(msg: String? = null) : InstanceError","description":"be.vamaralds.merode.instance.EventHandlingError","location":"merode/be.vamaralds.merode.instance/-event-handling-error/index.html","searchKeys":["EventHandlingError","class EventHandlingError(msg: String? = null) : InstanceError","be.vamaralds.merode.instance.EventHandlingError"]},{"name":"class MemoryEventStore : EventStore","description":"be.vamaralds.merode.store.MemoryEventStore","location":"merode/be.vamaralds.merode.store/-memory-event-store/index.html","searchKeys":["MemoryEventStore","class MemoryEventStore : EventStore","be.vamaralds.merode.store.MemoryEventStore"]},{"name":"class MissingPropertyError(msg: String? = null) : InstanceError","description":"be.vamaralds.merode.instance.MissingPropertyError","location":"merode/be.vamaralds.merode.instance/-missing-property-error/index.html","searchKeys":["MissingPropertyError","class MissingPropertyError(msg: String? = null) : InstanceError","be.vamaralds.merode.instance.MissingPropertyError"]},{"name":"class PropertyNotFoundError(attributeName: String, businessObjectTypeName: String) : InstanceError","description":"be.vamaralds.merode.instance.PropertyNotFoundError","location":"merode/be.vamaralds.merode.instance/-property-not-found-error/index.html","searchKeys":["PropertyNotFoundError","class PropertyNotFoundError(attributeName: String, businessObjectTypeName: String) : InstanceError","be.vamaralds.merode.instance.PropertyNotFoundError"]},{"name":"class PropertyTypeError(propertyName: String, expectedType: String, actualType: String) : InstanceError","description":"be.vamaralds.merode.instance.PropertyTypeError","location":"merode/be.vamaralds.merode.instance/-property-type-error/index.html","searchKeys":["PropertyTypeError","class PropertyTypeError(propertyName: String, expectedType: String, actualType: String) : InstanceError","be.vamaralds.merode.instance.PropertyTypeError"]},{"name":"class RecordNotFoundError(msg: String? = null) : StoreError","description":"be.vamaralds.merode.store.RecordNotFoundError","location":"merode/be.vamaralds.merode.store/-record-not-found-error/index.html","searchKeys":["RecordNotFoundError","class RecordNotFoundError(msg: String? = null) : StoreError","be.vamaralds.merode.store.RecordNotFoundError"]},{"name":"class ValueTypeError(msg: String? = null) : InstanceError","description":"be.vamaralds.merode.instance.ValueTypeError","location":"merode/be.vamaralds.merode.instance/-value-type-error/index.html","searchKeys":["ValueTypeError","class ValueTypeError(msg: String? = null) : InstanceError","be.vamaralds.merode.instance.ValueTypeError"]},{"name":"constructor()","description":"be.vamaralds.merode.store.MemoryEventStore.MemoryEventStore","location":"merode/be.vamaralds.merode.store/-memory-event-store/-memory-event-store.html","searchKeys":["MemoryEventStore","constructor()","be.vamaralds.merode.store.MemoryEventStore.MemoryEventStore"]},{"name":"constructor(attribute: Attribute, value: AttributeValue)","description":"be.vamaralds.merode.instance.Property.Property","location":"merode/be.vamaralds.merode.instance/-property/-property.html","searchKeys":["Property","constructor(attribute: Attribute, value: AttributeValue)","be.vamaralds.merode.instance.Property.Property"]},{"name":"constructor(attributeName: String, businessObjectTypeName: String)","description":"be.vamaralds.merode.instance.PropertyNotFoundError.PropertyNotFoundError","location":"merode/be.vamaralds.merode.instance/-property-not-found-error/-property-not-found-error.html","searchKeys":["PropertyNotFoundError","constructor(attributeName: String, businessObjectTypeName: String)","be.vamaralds.merode.instance.PropertyNotFoundError.PropertyNotFoundError"]},{"name":"constructor(attributeName: String, businessObjectTypeName: String)","description":"be.vamaralds.merode.model.AttributeNotFoundError.AttributeNotFoundError","location":"merode/be.vamaralds.merode.model/-attribute-not-found-error/-attribute-not-found-error.html","searchKeys":["AttributeNotFoundError","constructor(attributeName: String, businessObjectTypeName: String)","be.vamaralds.merode.model.AttributeNotFoundError.AttributeNotFoundError"]},{"name":"constructor(matrix: Map<State, Map<EventType, State>> = emptyMap())","description":"be.vamaralds.merode.model.StateMachine.StateMachine","location":"merode/be.vamaralds.merode.model/-state-machine/-state-machine.html","searchKeys":["StateMachine","constructor(matrix: Map<State, Map<EventType, State>> = emptyMap())","be.vamaralds.merode.model.StateMachine.StateMachine"]},{"name":"constructor(msg: String? = null)","description":"be.vamaralds.merode.common.MerodeError.MerodeError","location":"merode/be.vamaralds.merode.common/-merode-error/-merode-error.html","searchKeys":["MerodeError","constructor(msg: String? = null)","be.vamaralds.merode.common.MerodeError.MerodeError"]},{"name":"constructor(msg: String? = null)","description":"be.vamaralds.merode.instance.EventHandlingError.EventHandlingError","location":"merode/be.vamaralds.merode.instance/-event-handling-error/-event-handling-error.html","searchKeys":["EventHandlingError","constructor(msg: String? = null)","be.vamaralds.merode.instance.EventHandlingError.EventHandlingError"]},{"name":"constructor(msg: String? = null)","description":"be.vamaralds.merode.instance.InstanceError.InstanceError","location":"merode/be.vamaralds.merode.instance/-instance-error/-instance-error.html","searchKeys":["InstanceError","constructor(msg: String? = null)","be.vamaralds.merode.instance.InstanceError.InstanceError"]},{"name":"constructor(msg: String? = null)","description":"be.vamaralds.merode.instance.MissingPropertyError.MissingPropertyError","location":"merode/be.vamaralds.merode.instance/-missing-property-error/-missing-property-error.html","searchKeys":["MissingPropertyError","constructor(msg: String? = null)","be.vamaralds.merode.instance.MissingPropertyError.MissingPropertyError"]},{"name":"constructor(msg: String? = null)","description":"be.vamaralds.merode.instance.ValueTypeError.ValueTypeError","location":"merode/be.vamaralds.merode.instance/-value-type-error/-value-type-error.html","searchKeys":["ValueTypeError","constructor(msg: String? = null)","be.vamaralds.merode.instance.ValueTypeError.ValueTypeError"]},{"name":"constructor(msg: String? = null)","description":"be.vamaralds.merode.model.ModelError.ModelError","location":"merode/be.vamaralds.merode.model/-model-error/-model-error.html","searchKeys":["ModelError","constructor(msg: String? = null)","be.vamaralds.merode.model.ModelError.ModelError"]},{"name":"constructor(msg: String? = null)","description":"be.vamaralds.merode.store.RecordNotFoundError.RecordNotFoundError","location":"merode/be.vamaralds.merode.store/-record-not-found-error/-record-not-found-error.html","searchKeys":["RecordNotFoundError","constructor(msg: String? = null)","be.vamaralds.merode.store.RecordNotFoundError.RecordNotFoundError"]},{"name":"constructor(msg: String? = null)","description":"be.vamaralds.merode.store.StoreError.StoreError","location":"merode/be.vamaralds.merode.store/-store-error/-store-error.html","searchKeys":["StoreError","constructor(msg: String? = null)","be.vamaralds.merode.store.StoreError.StoreError"]},{"name":"constructor(name: String)","description":"be.vamaralds.merode.model.State.State","location":"merode/be.vamaralds.merode.model/-state/-state.html","searchKeys":["State","constructor(name: String)","be.vamaralds.merode.model.State.State"]},{"name":"constructor(name: String, attributes: Set<Attribute> = emptySet())","description":"be.vamaralds.merode.model.BusinessObjectType.BusinessObjectType","location":"merode/be.vamaralds.merode.model/-business-object-type/-business-object-type.html","searchKeys":["BusinessObjectType","constructor(name: String, attributes: Set<Attribute> = emptySet())","be.vamaralds.merode.model.BusinessObjectType.BusinessObjectType"]},{"name":"constructor(name: String, objectTypes: Set<BusinessObjectType>, eventTypes: Set<EventType>)","description":"be.vamaralds.merode.model.Model.Model","location":"merode/be.vamaralds.merode.model/-model/-model.html","searchKeys":["Model","constructor(name: String, objectTypes: Set<BusinessObjectType>, eventTypes: Set<EventType>)","be.vamaralds.merode.model.Model.Model"]},{"name":"constructor(name: String, ownerType: BusinessObjectType, attributes: Set<Attribute> = ownerType.attributes)","description":"be.vamaralds.merode.model.EventType.EventType","location":"merode/be.vamaralds.merode.model/-event-type/-event-type.html","searchKeys":["EventType","constructor(name: String, ownerType: BusinessObjectType, attributes: Set<Attribute> = ownerType.attributes)","be.vamaralds.merode.model.EventType.EventType"]},{"name":"constructor(name: String, stateMachine: StateMachine? = null, attributes: Set<Attribute> = emptySet())","description":"be.vamaralds.merode.model.BusinessObjectType.BusinessObjectType","location":"merode/be.vamaralds.merode.model/-business-object-type/-business-object-type.html","searchKeys":["BusinessObjectType","constructor(name: String, stateMachine: StateMachine? = null, attributes: Set<Attribute> = emptySet())","be.vamaralds.merode.model.BusinessObjectType.BusinessObjectType"]},{"name":"constructor(name: String, type: Attribute.Type)","description":"be.vamaralds.merode.model.Attribute.Attribute","location":"merode/be.vamaralds.merode.model/-attribute/-attribute.html","searchKeys":["Attribute","constructor(name: String, type: Attribute.Type)","be.vamaralds.merode.model.Attribute.Attribute"]},{"name":"constructor(onEventType: EventType, fromState: State, toState: State)","description":"be.vamaralds.merode.model.Transition.Transition","location":"merode/be.vamaralds.merode.model/-transition/-transition.html","searchKeys":["Transition","constructor(onEventType: EventType, fromState: State, toState: State)","be.vamaralds.merode.model.Transition.Transition"]},{"name":"constructor(propertyName: String, businessObjectTypeName: String)","description":"be.vamaralds.merode.instance.MissingPropertyError.MissingPropertyError","location":"merode/be.vamaralds.merode.instance/-missing-property-error/-missing-property-error.html","searchKeys":["MissingPropertyError","constructor(propertyName: String, businessObjectTypeName: String)","be.vamaralds.merode.instance.MissingPropertyError.MissingPropertyError"]},{"name":"constructor(propertyName: String, expectedType: String, actualType: String)","description":"be.vamaralds.merode.instance.PropertyTypeError.PropertyTypeError","location":"merode/be.vamaralds.merode.instance/-property-type-error/-property-type-error.html","searchKeys":["PropertyTypeError","constructor(propertyName: String, expectedType: String, actualType: String)","be.vamaralds.merode.instance.PropertyTypeError.PropertyTypeError"]},{"name":"constructor(type: BusinessObjectType, id: Long, state: State, properties: Set<Property> = emptySet())","description":"be.vamaralds.merode.instance.BusinessObject.BusinessObject","location":"merode/be.vamaralds.merode.instance/-business-object/-business-object.html","searchKeys":["BusinessObject","constructor(type: BusinessObjectType, id: Long, state: State, properties: Set<Property> = emptySet())","be.vamaralds.merode.instance.BusinessObject.BusinessObject"]},{"name":"constructor(type: EventType, eventId: Long, objectId: Long, properties: Set<Property> = emptySet())","description":"be.vamaralds.merode.instance.Event.Event","location":"merode/be.vamaralds.merode.instance/-event/-event.html","searchKeys":["Event","constructor(type: EventType, eventId: Long, objectId: Long, properties: Set<Property> = emptySet())","be.vamaralds.merode.instance.Event.Event"]},{"name":"constructor(value: Boolean?)","description":"be.vamaralds.merode.instance.AttributeValue.BooleanValue.BooleanValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-boolean-value/-boolean-value.html","searchKeys":["BooleanValue","constructor(value: Boolean?)","be.vamaralds.merode.instance.AttributeValue.BooleanValue.BooleanValue"]},{"name":"constructor(value: Double?)","description":"be.vamaralds.merode.instance.AttributeValue.DoubleValue.DoubleValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-double-value/-double-value.html","searchKeys":["DoubleValue","constructor(value: Double?)","be.vamaralds.merode.instance.AttributeValue.DoubleValue.DoubleValue"]},{"name":"constructor(value: Float?)","description":"be.vamaralds.merode.instance.AttributeValue.FloatValue.FloatValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-float-value/-float-value.html","searchKeys":["FloatValue","constructor(value: Float?)","be.vamaralds.merode.instance.AttributeValue.FloatValue.FloatValue"]},{"name":"constructor(value: Int?)","description":"be.vamaralds.merode.instance.AttributeValue.IntValue.IntValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-int-value/-int-value.html","searchKeys":["IntValue","constructor(value: Int?)","be.vamaralds.merode.instance.AttributeValue.IntValue.IntValue"]},{"name":"constructor(value: String?)","description":"be.vamaralds.merode.instance.AttributeValue.StringValue.StringValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-string-value/-string-value.html","searchKeys":["StringValue","constructor(value: String?)","be.vamaralds.merode.instance.AttributeValue.StringValue.StringValue"]},{"name":"data class Attribute(val name: String, val type: Attribute.Type)","description":"be.vamaralds.merode.model.Attribute","location":"merode/be.vamaralds.merode.model/-attribute/index.html","searchKeys":["Attribute","data class Attribute(val name: String, val type: Attribute.Type)","be.vamaralds.merode.model.Attribute"]},{"name":"data class BooleanValue(val value: Boolean?) : AttributeValue","description":"be.vamaralds.merode.instance.AttributeValue.BooleanValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-boolean-value/index.html","searchKeys":["BooleanValue","data class BooleanValue(val value: Boolean?) : AttributeValue","be.vamaralds.merode.instance.AttributeValue.BooleanValue"]},{"name":"data class BusinessObject(val type: BusinessObjectType, val id: Long, val state: State, properties: Set<Property> = emptySet())","description":"be.vamaralds.merode.instance.BusinessObject","location":"merode/be.vamaralds.merode.instance/-business-object/index.html","searchKeys":["BusinessObject","data class BusinessObject(val type: BusinessObjectType, val id: Long, val state: State, properties: Set<Property> = emptySet())","be.vamaralds.merode.instance.BusinessObject"]},{"name":"data class BusinessObjectType(val name: String, val stateMachine: StateMachine? = null, val attributes: Set<Attribute> = emptySet())","description":"be.vamaralds.merode.model.BusinessObjectType","location":"merode/be.vamaralds.merode.model/-business-object-type/index.html","searchKeys":["BusinessObjectType","data class BusinessObjectType(val name: String, val stateMachine: StateMachine? = null, val attributes: Set<Attribute> = emptySet())","be.vamaralds.merode.model.BusinessObjectType"]},{"name":"data class DoubleValue(val value: Double?) : AttributeValue","description":"be.vamaralds.merode.instance.AttributeValue.DoubleValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-double-value/index.html","searchKeys":["DoubleValue","data class DoubleValue(val value: Double?) : AttributeValue","be.vamaralds.merode.instance.AttributeValue.DoubleValue"]},{"name":"data class Event(val type: EventType, val eventId: Long, val objectId: Long, val properties: Set<Property> = emptySet())","description":"be.vamaralds.merode.instance.Event","location":"merode/be.vamaralds.merode.instance/-event/index.html","searchKeys":["Event","data class Event(val type: EventType, val eventId: Long, val objectId: Long, val properties: Set<Property> = emptySet())","be.vamaralds.merode.instance.Event"]},{"name":"data class EventType(val name: String, val ownerType: BusinessObjectType, val attributes: Set<Attribute> = ownerType.attributes)","description":"be.vamaralds.merode.model.EventType","location":"merode/be.vamaralds.merode.model/-event-type/index.html","searchKeys":["EventType","data class EventType(val name: String, val ownerType: BusinessObjectType, val attributes: Set<Attribute> = ownerType.attributes)","be.vamaralds.merode.model.EventType"]},{"name":"data class FloatValue(val value: Float?) : AttributeValue","description":"be.vamaralds.merode.instance.AttributeValue.FloatValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-float-value/index.html","searchKeys":["FloatValue","data class FloatValue(val value: Float?) : AttributeValue","be.vamaralds.merode.instance.AttributeValue.FloatValue"]},{"name":"data class IntValue(val value: Int?) : AttributeValue","description":"be.vamaralds.merode.instance.AttributeValue.IntValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-int-value/index.html","searchKeys":["IntValue","data class IntValue(val value: Int?) : AttributeValue","be.vamaralds.merode.instance.AttributeValue.IntValue"]},{"name":"data class Model(val name: String, val objectTypes: Set<BusinessObjectType>, val eventTypes: Set<EventType>)","description":"be.vamaralds.merode.model.Model","location":"merode/be.vamaralds.merode.model/-model/index.html","searchKeys":["Model","data class Model(val name: String, val objectTypes: Set<BusinessObjectType>, val eventTypes: Set<EventType>)","be.vamaralds.merode.model.Model"]},{"name":"data class Property(val attribute: Attribute, val value: AttributeValue)","description":"be.vamaralds.merode.instance.Property","location":"merode/be.vamaralds.merode.instance/-property/index.html","searchKeys":["Property","data class Property(val attribute: Attribute, val value: AttributeValue)","be.vamaralds.merode.instance.Property"]},{"name":"data class State(val name: String)","description":"be.vamaralds.merode.model.State","location":"merode/be.vamaralds.merode.model/-state/index.html","searchKeys":["State","data class State(val name: String)","be.vamaralds.merode.model.State"]},{"name":"data class StateMachine(matrix: Map<State, Map<EventType, State>> = emptyMap())","description":"be.vamaralds.merode.model.StateMachine","location":"merode/be.vamaralds.merode.model/-state-machine/index.html","searchKeys":["StateMachine","data class StateMachine(matrix: Map<State, Map<EventType, State>> = emptyMap())","be.vamaralds.merode.model.StateMachine"]},{"name":"data class StringValue(val value: String?) : AttributeValue","description":"be.vamaralds.merode.instance.AttributeValue.StringValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-string-value/index.html","searchKeys":["StringValue","data class StringValue(val value: String?) : AttributeValue","be.vamaralds.merode.instance.AttributeValue.StringValue"]},{"name":"data class Transition(val onEventType: EventType, val fromState: State, val toState: State)","description":"be.vamaralds.merode.model.Transition","location":"merode/be.vamaralds.merode.model/-transition/index.html","searchKeys":["Transition","data class Transition(val onEventType: EventType, val fromState: State, val toState: State)","be.vamaralds.merode.model.Transition"]},{"name":"enum Type : Enum<Attribute.Type> ","description":"be.vamaralds.merode.model.Attribute.Type","location":"merode/be.vamaralds.merode.model/-attribute/-type/index.html","searchKeys":["Type","enum Type : Enum<Attribute.Type> ","be.vamaralds.merode.model.Attribute.Type"]},{"name":"fun <T> attributeValue(value: T?): Either<ValueTypeError, AttributeValue>","description":"be.vamaralds.merode.instance.AttributeValue.Companion.attributeValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/-companion/attribute-value.html","searchKeys":["attributeValue","fun <T> attributeValue(value: T?): Either<ValueTypeError, AttributeValue>","be.vamaralds.merode.instance.AttributeValue.Companion.attributeValue"]},{"name":"fun <T> property(attribute: Attribute, value: T?): Either<PropertyTypeError, Property>","description":"be.vamaralds.merode.instance.Property.Companion.property","location":"merode/be.vamaralds.merode.instance/-property/-companion/property.html","searchKeys":["property","fun <T> property(attribute: Attribute, value: T?): Either<PropertyTypeError, Property>","be.vamaralds.merode.instance.Property.Companion.property"]},{"name":"fun attribute(name: String): Either<AttributeNotFoundError, Attribute>","description":"be.vamaralds.merode.model.BusinessObjectType.attribute","location":"merode/be.vamaralds.merode.model/-business-object-type/attribute.html","searchKeys":["attribute","fun attribute(name: String): Either<AttributeNotFoundError, Attribute>","be.vamaralds.merode.model.BusinessObjectType.attribute"]},{"name":"fun attribute(name: String): Either<AttributeNotFoundError, Attribute>","description":"be.vamaralds.merode.model.EventType.attribute","location":"merode/be.vamaralds.merode.model/-event-type/attribute.html","searchKeys":["attribute","fun attribute(name: String): Either<AttributeNotFoundError, Attribute>","be.vamaralds.merode.model.EventType.attribute"]},{"name":"fun eventTypes(): List<EventType>","description":"be.vamaralds.merode.model.StateMachine.eventTypes","location":"merode/be.vamaralds.merode.model/-state-machine/event-types.html","searchKeys":["eventTypes","fun eventTypes(): List<EventType>","be.vamaralds.merode.model.StateMachine.eventTypes"]},{"name":"fun handleEvent(event: Event): EitherNel<EventHandlingError, BusinessObject>","description":"be.vamaralds.merode.instance.BusinessObject.handleEvent","location":"merode/be.vamaralds.merode.instance/-business-object/handle-event.html","searchKeys":["handleEvent","fun handleEvent(event: Event): EitherNel<EventHandlingError, BusinessObject>","be.vamaralds.merode.instance.BusinessObject.handleEvent"]},{"name":"fun main(args: Array<String>)","description":".main","location":"merode/[root]/main.html","searchKeys":["main","fun main(args: Array<String>)",".main"]},{"name":"fun nextState(currentState: State, event: EventType): Either<EventHandlingError, State>","description":"be.vamaralds.merode.model.StateMachine.nextState","location":"merode/be.vamaralds.merode.model/-state-machine/next-state.html","searchKeys":["nextState","fun nextState(currentState: State, event: EventType): Either<EventHandlingError, State>","be.vamaralds.merode.model.StateMachine.nextState"]},{"name":"fun stateMachine(stateMachine: StateMachine): BusinessObjectType","description":"be.vamaralds.merode.model.BusinessObjectType.stateMachine","location":"merode/be.vamaralds.merode.model/-business-object-type/state-machine.html","searchKeys":["stateMachine","fun stateMachine(stateMachine: StateMachine): BusinessObjectType","be.vamaralds.merode.model.BusinessObjectType.stateMachine"]},{"name":"fun valueOf(value: String): Attribute.Type","description":"be.vamaralds.merode.model.Attribute.Type.valueOf","location":"merode/be.vamaralds.merode.model/-attribute/-type/value-of.html","searchKeys":["valueOf","fun valueOf(value: String): Attribute.Type","be.vamaralds.merode.model.Attribute.Type.valueOf"]},{"name":"fun values(): Array<Attribute.Type>","description":"be.vamaralds.merode.model.Attribute.Type.values","location":"merode/be.vamaralds.merode.model/-attribute/-type/values.html","searchKeys":["values","fun values(): Array<Attribute.Type>","be.vamaralds.merode.model.Attribute.Type.values"]},{"name":"interface BusinessObjectStore","description":"be.vamaralds.merode.store.BusinessObjectStore","location":"merode/be.vamaralds.merode.store/-business-object-store/index.html","searchKeys":["BusinessObjectStore","interface BusinessObjectStore","be.vamaralds.merode.store.BusinessObjectStore"]},{"name":"interface EventStore","description":"be.vamaralds.merode.store.EventStore","location":"merode/be.vamaralds.merode.store/-event-store/index.html","searchKeys":["EventStore","interface EventStore","be.vamaralds.merode.store.EventStore"]},{"name":"object Companion","description":"be.vamaralds.merode.instance.AttributeValue.Companion","location":"merode/be.vamaralds.merode.instance/-attribute-value/-companion/index.html","searchKeys":["Companion","object Companion","be.vamaralds.merode.instance.AttributeValue.Companion"]},{"name":"object Companion","description":"be.vamaralds.merode.instance.Property.Companion","location":"merode/be.vamaralds.merode.instance/-property/-companion/index.html","searchKeys":["Companion","object Companion","be.vamaralds.merode.instance.Property.Companion"]},{"name":"object Companion","description":"be.vamaralds.merode.model.State.Companion","location":"merode/be.vamaralds.merode.model/-state/-companion/index.html","searchKeys":["Companion","object Companion","be.vamaralds.merode.model.State.Companion"]},{"name":"object Companion","description":"be.vamaralds.merode.model.StateMachine.Companion","location":"merode/be.vamaralds.merode.model/-state-machine/-companion/index.html","searchKeys":["Companion","object Companion","be.vamaralds.merode.model.StateMachine.Companion"]},{"name":"open class InstanceError(msg: String? = null) : MerodeError","description":"be.vamaralds.merode.instance.InstanceError","location":"merode/be.vamaralds.merode.instance/-instance-error/index.html","searchKeys":["InstanceError","open class InstanceError(msg: String? = null) : MerodeError","be.vamaralds.merode.instance.InstanceError"]},{"name":"open class MerodeError(msg: String? = null) : Exception","description":"be.vamaralds.merode.common.MerodeError","location":"merode/be.vamaralds.merode.common/-merode-error/index.html","searchKeys":["MerodeError","open class MerodeError(msg: String? = null) : Exception","be.vamaralds.merode.common.MerodeError"]},{"name":"open class ModelError(msg: String? = null) : MerodeError","description":"be.vamaralds.merode.model.ModelError","location":"merode/be.vamaralds.merode.model/-model-error/index.html","searchKeys":["ModelError","open class ModelError(msg: String? = null) : MerodeError","be.vamaralds.merode.model.ModelError"]},{"name":"open class StoreError(msg: String? = null) : MerodeError","description":"be.vamaralds.merode.store.StoreError","location":"merode/be.vamaralds.merode.store/-store-error/index.html","searchKeys":["StoreError","open class StoreError(msg: String? = null) : MerodeError","be.vamaralds.merode.store.StoreError"]},{"name":"open override fun toString(): String","description":"be.vamaralds.merode.instance.BusinessObject.toString","location":"merode/be.vamaralds.merode.instance/-business-object/to-string.html","searchKeys":["toString","open override fun toString(): String","be.vamaralds.merode.instance.BusinessObject.toString"]},{"name":"open override fun toString(): String","description":"be.vamaralds.merode.instance.Event.toString","location":"merode/be.vamaralds.merode.instance/-event/to-string.html","searchKeys":["toString","open override fun toString(): String","be.vamaralds.merode.instance.Event.toString"]},{"name":"open override val value: Boolean?","description":"be.vamaralds.merode.instance.AttributeValue.BooleanValue.value","location":"merode/be.vamaralds.merode.instance/-attribute-value/-boolean-value/value.html","searchKeys":["value","open override val value: Boolean?","be.vamaralds.merode.instance.AttributeValue.BooleanValue.value"]},{"name":"open override val value: Double?","description":"be.vamaralds.merode.instance.AttributeValue.DoubleValue.value","location":"merode/be.vamaralds.merode.instance/-attribute-value/-double-value/value.html","searchKeys":["value","open override val value: Double?","be.vamaralds.merode.instance.AttributeValue.DoubleValue.value"]},{"name":"open override val value: Float?","description":"be.vamaralds.merode.instance.AttributeValue.FloatValue.value","location":"merode/be.vamaralds.merode.instance/-attribute-value/-float-value/value.html","searchKeys":["value","open override val value: Float?","be.vamaralds.merode.instance.AttributeValue.FloatValue.value"]},{"name":"open override val value: Int?","description":"be.vamaralds.merode.instance.AttributeValue.IntValue.value","location":"merode/be.vamaralds.merode.instance/-attribute-value/-int-value/value.html","searchKeys":["value","open override val value: Int?","be.vamaralds.merode.instance.AttributeValue.IntValue.value"]},{"name":"open override val value: String?","description":"be.vamaralds.merode.instance.AttributeValue.StringValue.value","location":"merode/be.vamaralds.merode.instance/-attribute-value/-string-value/value.html","searchKeys":["value","open override val value: String?","be.vamaralds.merode.instance.AttributeValue.StringValue.value"]},{"name":"open suspend override fun append(event: Event): Either<StoreError, Event>","description":"be.vamaralds.merode.store.MemoryEventStore.append","location":"merode/be.vamaralds.merode.store/-memory-event-store/append.html","searchKeys":["append","open suspend override fun append(event: Event): Either<StoreError, Event>","be.vamaralds.merode.store.MemoryEventStore.append"]},{"name":"open suspend override fun exists(id: Long): Either<StoreError, Boolean>","description":"be.vamaralds.merode.store.MemoryEventStore.exists","location":"merode/be.vamaralds.merode.store/-memory-event-store/exists.html","searchKeys":["exists","open suspend override fun exists(id: Long): Either<StoreError, Boolean>","be.vamaralds.merode.store.MemoryEventStore.exists"]},{"name":"open suspend override fun get(id: Long): Either<StoreError, Event>","description":"be.vamaralds.merode.store.MemoryEventStore.get","location":"merode/be.vamaralds.merode.store/-memory-event-store/get.html","searchKeys":["get","open suspend override fun get(id: Long): Either<StoreError, Event>","be.vamaralds.merode.store.MemoryEventStore.get"]},{"name":"open suspend override fun getAll(): Either<StoreError, List<Event>>","description":"be.vamaralds.merode.store.MemoryEventStore.getAll","location":"merode/be.vamaralds.merode.store/-memory-event-store/get-all.html","searchKeys":["getAll","open suspend override fun getAll(): Either<StoreError, List<Event>>","be.vamaralds.merode.store.MemoryEventStore.getAll"]},{"name":"open suspend override fun getEventsForBusinessObject(id: Long): Either<StoreError, List<Event>>","description":"be.vamaralds.merode.store.MemoryEventStore.getEventsForBusinessObject","location":"merode/be.vamaralds.merode.store/-memory-event-store/get-events-for-business-object.html","searchKeys":["getEventsForBusinessObject","open suspend override fun getEventsForBusinessObject(id: Long): Either<StoreError, List<Event>>","be.vamaralds.merode.store.MemoryEventStore.getEventsForBusinessObject"]},{"name":"open suspend override fun size(): Either<StoreError, Long>","description":"be.vamaralds.merode.store.MemoryEventStore.size","location":"merode/be.vamaralds.merode.store/-memory-event-store/size.html","searchKeys":["size","open suspend override fun size(): Either<StoreError, Long>","be.vamaralds.merode.store.MemoryEventStore.size"]},{"name":"operator fun <T> get(propertyName: String): Either<InstanceError, T?>","description":"be.vamaralds.merode.instance.BusinessObject.get","location":"merode/be.vamaralds.merode.instance/-business-object/get.html","searchKeys":["get","operator fun <T> get(propertyName: String): Either<InstanceError, T?>","be.vamaralds.merode.instance.BusinessObject.get"]},{"name":"operator fun <T> get(propertyName: String): Either<InstanceError, T?>","description":"be.vamaralds.merode.instance.Event.get","location":"merode/be.vamaralds.merode.instance/-event/get.html","searchKeys":["get","operator fun <T> get(propertyName: String): Either<InstanceError, T?>","be.vamaralds.merode.instance.Event.get"]},{"name":"operator fun invoke(): EitherNel<InstanceError, BusinessObject>","description":"be.vamaralds.merode.model.BusinessObjectType.invoke","location":"merode/be.vamaralds.merode.model/-business-object-type/invoke.html","searchKeys":["invoke","operator fun invoke(): EitherNel<InstanceError, BusinessObject>","be.vamaralds.merode.model.BusinessObjectType.invoke"]},{"name":"operator fun invoke(eventId: Long, objectId: Long, props: Map<String, Any?> = emptyMap()): EitherNel<InstanceError, Event>","description":"be.vamaralds.merode.model.EventType.invoke","location":"merode/be.vamaralds.merode.model/-event-type/invoke.html","searchKeys":["invoke","operator fun invoke(eventId: Long, objectId: Long, props: Map<String, Any?> = emptyMap()): EitherNel<InstanceError, Event>","be.vamaralds.merode.model.EventType.invoke"]},{"name":"operator fun invoke(id: Long, state: State = State.Initial, props: Map<String, Any?> = emptyMap()): EitherNel<InstanceError, BusinessObject>","description":"be.vamaralds.merode.model.BusinessObjectType.invoke","location":"merode/be.vamaralds.merode.model/-business-object-type/invoke.html","searchKeys":["invoke","operator fun invoke(id: Long, state: State = State.Initial, props: Map<String, Any?> = emptyMap()): EitherNel<InstanceError, BusinessObject>","be.vamaralds.merode.model.BusinessObjectType.invoke"]},{"name":"operator fun invoke(id: Long, state: State, vararg propsValues: Any?): EitherNel<InstanceError, BusinessObject>","description":"be.vamaralds.merode.model.BusinessObjectType.invoke","location":"merode/be.vamaralds.merode.model/-business-object-type/invoke.html","searchKeys":["invoke","operator fun invoke(id: Long, state: State, vararg propsValues: Any?): EitherNel<InstanceError, BusinessObject>","be.vamaralds.merode.model.BusinessObjectType.invoke"]},{"name":"operator fun invoke(transitions: Set<Transition>): StateMachine","description":"be.vamaralds.merode.model.StateMachine.Companion.invoke","location":"merode/be.vamaralds.merode.model/-state-machine/-companion/invoke.html","searchKeys":["invoke","operator fun invoke(transitions: Set<Transition>): StateMachine","be.vamaralds.merode.model.StateMachine.Companion.invoke"]},{"name":"override fun toString(): String","description":"be.vamaralds.merode.instance.AttributeValue.toString","location":"merode/be.vamaralds.merode.instance/-attribute-value/to-string.html","searchKeys":["toString","override fun toString(): String","be.vamaralds.merode.instance.AttributeValue.toString"]},{"name":"sealed class AttributeValue","description":"be.vamaralds.merode.instance.AttributeValue","location":"merode/be.vamaralds.merode.instance/-attribute-value/index.html","searchKeys":["AttributeValue","sealed class AttributeValue","be.vamaralds.merode.instance.AttributeValue"]},{"name":"val Initial: State","description":"be.vamaralds.merode.model.State.Companion.Initial","location":"merode/be.vamaralds.merode.model/-state/-companion/-initial.html","searchKeys":["Initial","val Initial: State","be.vamaralds.merode.model.State.Companion.Initial"]},{"name":"val attribute: Attribute","description":"be.vamaralds.merode.instance.Property.attribute","location":"merode/be.vamaralds.merode.instance/-property/attribute.html","searchKeys":["attribute","val attribute: Attribute","be.vamaralds.merode.instance.Property.attribute"]},{"name":"val attributes: Set<Attribute>","description":"be.vamaralds.merode.model.BusinessObjectType.attributes","location":"merode/be.vamaralds.merode.model/-business-object-type/attributes.html","searchKeys":["attributes","val attributes: Set<Attribute>","be.vamaralds.merode.model.BusinessObjectType.attributes"]},{"name":"val attributes: Set<Attribute>","description":"be.vamaralds.merode.model.EventType.attributes","location":"merode/be.vamaralds.merode.model/-event-type/attributes.html","searchKeys":["attributes","val attributes: Set<Attribute>","be.vamaralds.merode.model.EventType.attributes"]},{"name":"val eventId: Long","description":"be.vamaralds.merode.instance.Event.eventId","location":"merode/be.vamaralds.merode.instance/-event/event-id.html","searchKeys":["eventId","val eventId: Long","be.vamaralds.merode.instance.Event.eventId"]},{"name":"val eventTypes: Set<EventType>","description":"be.vamaralds.merode.model.Model.eventTypes","location":"merode/be.vamaralds.merode.model/-model/event-types.html","searchKeys":["eventTypes","val eventTypes: Set<EventType>","be.vamaralds.merode.model.Model.eventTypes"]},{"name":"val fromState: State","description":"be.vamaralds.merode.model.Transition.fromState","location":"merode/be.vamaralds.merode.model/-transition/from-state.html","searchKeys":["fromState","val fromState: State","be.vamaralds.merode.model.Transition.fromState"]},{"name":"val id: Long","description":"be.vamaralds.merode.instance.BusinessObject.id","location":"merode/be.vamaralds.merode.instance/-business-object/id.html","searchKeys":["id","val id: Long","be.vamaralds.merode.instance.BusinessObject.id"]},{"name":"val name: String","description":"be.vamaralds.merode.model.Attribute.name","location":"merode/be.vamaralds.merode.model/-attribute/name.html","searchKeys":["name","val name: String","be.vamaralds.merode.model.Attribute.name"]},{"name":"val name: String","description":"be.vamaralds.merode.model.BusinessObjectType.name","location":"merode/be.vamaralds.merode.model/-business-object-type/name.html","searchKeys":["name","val name: String","be.vamaralds.merode.model.BusinessObjectType.name"]},{"name":"val name: String","description":"be.vamaralds.merode.model.EventType.name","location":"merode/be.vamaralds.merode.model/-event-type/name.html","searchKeys":["name","val name: String","be.vamaralds.merode.model.EventType.name"]},{"name":"val name: String","description":"be.vamaralds.merode.model.Model.name","location":"merode/be.vamaralds.merode.model/-model/name.html","searchKeys":["name","val name: String","be.vamaralds.merode.model.Model.name"]},{"name":"val name: String","description":"be.vamaralds.merode.model.State.name","location":"merode/be.vamaralds.merode.model/-state/name.html","searchKeys":["name","val name: String","be.vamaralds.merode.model.State.name"]},{"name":"val objectId: Long","description":"be.vamaralds.merode.instance.Event.objectId","location":"merode/be.vamaralds.merode.instance/-event/object-id.html","searchKeys":["objectId","val objectId: Long","be.vamaralds.merode.instance.Event.objectId"]},{"name":"val objectTypes: Set<BusinessObjectType>","description":"be.vamaralds.merode.model.Model.objectTypes","location":"merode/be.vamaralds.merode.model/-model/object-types.html","searchKeys":["objectTypes","val objectTypes: Set<BusinessObjectType>","be.vamaralds.merode.model.Model.objectTypes"]},{"name":"val onEventType: EventType","description":"be.vamaralds.merode.model.Transition.onEventType","location":"merode/be.vamaralds.merode.model/-transition/on-event-type.html","searchKeys":["onEventType","val onEventType: EventType","be.vamaralds.merode.model.Transition.onEventType"]},{"name":"val ownerType: BusinessObjectType","description":"be.vamaralds.merode.model.EventType.ownerType","location":"merode/be.vamaralds.merode.model/-event-type/owner-type.html","searchKeys":["ownerType","val ownerType: BusinessObjectType","be.vamaralds.merode.model.EventType.ownerType"]},{"name":"val properties: Set<Property>","description":"be.vamaralds.merode.instance.Event.properties","location":"merode/be.vamaralds.merode.instance/-event/properties.html","searchKeys":["properties","val properties: Set<Property>","be.vamaralds.merode.instance.Event.properties"]},{"name":"val state: State","description":"be.vamaralds.merode.instance.BusinessObject.state","location":"merode/be.vamaralds.merode.instance/-business-object/state.html","searchKeys":["state","val state: State","be.vamaralds.merode.instance.BusinessObject.state"]},{"name":"val stateMachine: StateMachine? = null","description":"be.vamaralds.merode.model.BusinessObjectType.stateMachine","location":"merode/be.vamaralds.merode.model/-business-object-type/state-machine.html","searchKeys":["stateMachine","val stateMachine: StateMachine? = null","be.vamaralds.merode.model.BusinessObjectType.stateMachine"]},{"name":"val toState: State","description":"be.vamaralds.merode.model.Transition.toState","location":"merode/be.vamaralds.merode.model/-transition/to-state.html","searchKeys":["toState","val toState: State","be.vamaralds.merode.model.Transition.toState"]},{"name":"val type: Attribute.Type","description":"be.vamaralds.merode.model.Attribute.type","location":"merode/be.vamaralds.merode.model/-attribute/type.html","searchKeys":["type","val type: Attribute.Type","be.vamaralds.merode.model.Attribute.type"]},{"name":"val type: BusinessObjectType","description":"be.vamaralds.merode.instance.BusinessObject.type","location":"merode/be.vamaralds.merode.instance/-business-object/type.html","searchKeys":["type","val type: BusinessObjectType","be.vamaralds.merode.instance.BusinessObject.type"]},{"name":"val type: EventType","description":"be.vamaralds.merode.instance.Event.type","location":"merode/be.vamaralds.merode.instance/-event/type.html","searchKeys":["type","val type: EventType","be.vamaralds.merode.instance.Event.type"]},{"name":"val value: AttributeValue","description":"be.vamaralds.merode.instance.Property.value","location":"merode/be.vamaralds.merode.instance/-property/value.html","searchKeys":["value","val value: AttributeValue","be.vamaralds.merode.instance.Property.value"]}]
